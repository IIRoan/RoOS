---
name: Build ISOs (Live Anaconda)

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/workflows/reusable-build-iso-anaconda.yml"
      - "iso_files/configure_iso_anaconda.sh"

env:
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"
  IMAGE_NAME: "bluefin"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    name: Build ISOs
    runs-on: ${{ matrix.platform == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    strategy:
      fail-fast: false
      matrix:
        platform: [amd64]
        flavor: ["main", "nvidia-open"]
        image_version: ["gts", "stable"]
        include:
          - platform: amd64
            flavor: "main"
            image_version: lts
          - platform: arm64
            flavor: "main"
            image_version: lts
          - platform: amd64
            flavor: gdx
            image_version: lts
          - platform: arm64
            flavor: gdx
            image_version: lts
    permissions:
      contents: read
      packages: read
      id-token: write

    steps:
      - name: Install dependencies
        if: matrix.platform == 'arm64'
        run: |
          set -x
          sudo apt update -y
          sudo apt install -y \
            podman

      - name: Maximize build space
        if: matrix.platform != 'arm64'
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9
        with:
          remove-codeql: true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3

      - name: Check Just Syntax
        shell: bash
        run: |
          just check

      - name: Format image ref
        id: image_ref
        env:
          FLAVOR: ${{ matrix.flavor }}
        run: |
          set -eoux pipefail          
          image_name=$(just image_name "bluefin" "${{ matrix.image_version}}" "${{ matrix.flavor}}")
          image_ref="${IMAGE_REGISTRY}/${image_name}"
          # Convert to lowercase for container registry compatibility
          image_ref=$(echo "$image_ref" | tr '[:upper:]' '[:lower:]')
          KARGS="NONE"
          echo "image_ref=$image_ref" >> "${GITHUB_OUTPUT}"
          echo "artifact_format="$image_name-${{ matrix.image_version }}-$(uname -m)"" >> "${GITHUB_OUTPUT}"
          echo "kargs=$KARGS" >> "${GITHUB_OUTPUT}"

      - name: Build ISO
        id: build
        uses: ublue-os/titanoboa@main
        with:
          image-ref: ${{ steps.image_ref.outputs.image_ref }}:${{ matrix.image_version }}
          flatpaks-list: ${{ github.workspace }}/iso_files/system-flatpaks.list
          hook-post-rootfs: ${{ github.workspace }}/iso_files/configure_iso_anaconda.sh
          kargs: ${{ steps.image_ref.outputs.kargs }}

      - name: Rename ISO
        id: rename
        env:
          OUTPUT_PATH: ${{ steps.build.outputs.iso-dest }}
          FLAVOR: ${{ matrix.flavor }}
          OUTPUT_NAME: ${{ steps.image_ref.outputs.artifact_format }}
          IMAGE_VERSION: ${{ matrix.image_version }}
        run: |
          set -x
          mkdir -p output
          OUTPUT_DIRECTORY="$(realpath output)"
          sha256sum "${OUTPUT_PATH}" | tee "${OUTPUT_DIRECTORY}/${OUTPUT_NAME}.iso-CHECKSUM"
          mv "${OUTPUT_PATH}" "${OUTPUT_DIRECTORY}/${OUTPUT_NAME}.iso"
          echo "output_directory=$OUTPUT_DIRECTORY" >> "${GITHUB_OUTPUT}"

      - name: Upload to Job Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ${{ steps.image_ref.outputs.artifact_format }}
          if-no-files-found: error
          path: ${{ steps.rename.outputs.output_directory }}